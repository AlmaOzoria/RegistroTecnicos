@page "/Trabajo/Details"
@page "/Trabajo/Details/{TrabajosId:int}"
@inject TrabajosServices trabajosServices
@inject ArticuloServices articuloServices
@inject NavigationManager navigationManager
@rendermode InteractiveServer

<PageTitle>Detalles del Trabajo</PageTitle>
@if (Trabajos != null)
{
    <div class="container">
        <div class="card shadow-header">
            <div class="card-header  bg-primary text-white text-center py-2 rounded">
                <h3 class="text-center"><strong>Detalles del trabajos</strong></h3>
            </div>
            <div class="container">
                <div class="row">
                    <div class="col-md-6">

                        <div class="card-body">
                            <ul class="list-unstyled">
                                <li><strong>TrabajosId:</strong> @Trabajos.TrabajosId</li>
                                <li><strong>Fecha:</strong> @Trabajos.Fecha.ToString("dd/MM/yyyyy")</li>
                                <li><strong>Clientes:</strong> @Trabajos.clientes?.Nombres</li>
                                <li><strong>Tecnicos:</strong> @Trabajos.tecnicos?.Nombre</li>
                                <li><strong>Descripcion:</strong> @Trabajos.Descripcion</li>
                                <li><strong>Prioridad:</strong> @Trabajos.prioridades?.Descripcion</li>
                                <li><strong>Monto:</strong> @Trabajos.Monto</li>
                                <li><strong>Articulo:</strong> @TrabajoDetalle?.Articulos?.Descripcion</li>
                                <li><strong>Cantidad:</strong> @TrabajoDetalle?.Cantidad</li>
                                <li><strong>Precio:</strong> @TrabajoDetalle?.Precio</li>
                            </ul>
                        </div>
                    </div>
                </div>
            </div>
            <div class="card-footer">
                <button type="button" class="btn btn-outline-primary" @onclick="Volver"><i class="bi bi-box-arrow-left"></i> Volver</button>
                <a href=@($"https://wa.me/1{ObtenerWhatsApp()}?text={ObtenerMensaje()}") class="btn btn-outline-success" type="button" target="_blank" rel="noopener noreferrer">
                    <span class="bi bi-whatsapp">   </span> Finalizar
                 </a>
            </div>
        </div>
    </div>
}
else
{
    <p>Trabajos no encontrado.</p>
}


@code {
    [Parameter]
    public int TrabajosId { get; set; }
    public int ArticuloId { get; set; }
    public Trabajos? Trabajos { get; set; } = new Trabajos();
    public TrabajoDetalle? TrabajoDetalle { get; set; }
    public List<Articulos> Articulos { get; set; } = new List<Articulos>();
    public List<Articulos> ListaArticulo { get; set; } = new List<Articulos>();

    protected override async Task OnInitializedAsync()
    {
        if (TrabajosId != 0)
        {
            Trabajos = await trabajosServices.Buscar(TrabajosId);
            if (Trabajos?.TrabajoDetalle != null)
            {
                TrabajoDetalle = Trabajos.TrabajoDetalle.FirstOrDefault(td => td.ArticuloId == ArticuloId);
            }
            Articulos = await trabajosServices.ObtenerArticulos();
        }
    }

    public string ObtenerWhatsApp()
    {
        string WhatsApp = Trabajos.clientes?.WhatsApp;
        return WhatsApp;
    }

    public string ObtenerMensaje()
    {
        DateTime fechaActual = DateTime.Now;
        string fechaFinalizada = fechaActual.ToString("dd/MM/yyyy");

        DateTime hora = DateTime.Now;
        string horaFinalizada = hora.ToString("hh:mm:ss tt");

        string Mensaje = ($"Señor/a {Trabajos.clientes?.Nombres}, su trabajo de ({Trabajos.Descripcion}) ha sido finalizado el dia {fechaFinalizada}, a las {horaFinalizada}, por un monto total de RD${Trabajos.Monto}");
        return Mensaje;
    }

    public void Volver()
    {
        navigationManager.NavigateTo("/Trabajo/Index");
    }

}

